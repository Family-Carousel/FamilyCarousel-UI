service: FamilyCarousel-Ui

frameworkVersion: ^3.21.0
configValidationMode: error
deprecationNotificationMode: error
useDotenv: true

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  logRetentionInDays: 3
  timeout: 29
  memorySize: 1024
  environment:
    NODE_ENV: ${env:NODE_ENV}
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1,
    NUXT_ENV_AUTH_DOMAIN: ${env:NUXT_ENV_AUTH_DOMAIN}
    NUXT_ENV_AUTH_CLIENT_ID: ${env:NUXT_ENV_AUTH_CLIENT_ID}
    NUXT_ENV_AUTH_AUDIENCE: ${env:NUXT_ENV_AUTH_AUDIENCE}
    NUXT_ENV_LOGOUT_REDIRECT_URL: ${env:NUXT_ENV_LOGOUT_REDIRECT_URL}
    API_URL_BROWSER: ${env:API_URL_BROWSER}
    API_URL: ${env:API_URL}
    NUXT_ENV_DOMAIN_HTTPS: ${env:NUXT_ENV_DOMAIN_HTTPS}
    NUXT_ENV_DOMAIN_HTTP: ${env:NUXT_ENV_DOMAIN_HTTP}
    NUXT_ENV_DOMAIN: ${env:NUXT_ENV_DOMAIN}
    LOG_LEVEL: ${env:LOG_LEVEL}
    ENV: ${env:ENV}
  apiGateway:
    shouldStartNameWithService: true
  iam:
    role:
      statements:
        - Action:
            - lambda:InvokeAsync
            - lambda:InvokeFunction
          Effect: Allow
          Resource: "*"

functions:
  nuxt:
    handler: handler.nuxt
    name: ${self:provider.stage}-familycarousel-nuxt
    description: Aws lambda function servicing up serverless nuxt SSR site for family carousel
    events:
      - http:
          path: /
          method: ANY
          cors: true
      - http:
          path: /{proxy+}
          method: ANY
          cors: true

plugins:
  - serverless-plugin-common-excludes
  - serverless-domain-manager
  - serverless-apigw-binary
  - serverless-offline

package:
  individually: true
  excludeDevDependencies: false

custom:
  includeDependencies:
    enableCaching: true
  apigwBinary:
    types:
      - "*/*"
  serverless-offline:
    noPrependStageInUrl: true
  domainMap:
    dev: dev.familycarousel.com
    prod: familycarousel.com
  certMap:
    dev: "*.familycarousel.com"
    prod: "*.familycarousel.com"
  customDomain:
    domainName: ${self:custom.domainMap.${self:provider.stage}}
    endpointType: regional
    basePath: ""
    stage: ${self:provider.stage}
    createRoute53Record: false
    certificateName: ${self:custom.certMap.${self:provider.stage}}
